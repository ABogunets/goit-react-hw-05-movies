{"version":3,"file":"static/js/415.78172f38.chunk.js","mappings":"sLAEaA,E,QAAQC,GAAAA,GAAH,8H,gFCALC,E,QAAgBD,GAAAA,IAAH,yF,SCCbE,EAAS,WACpB,OACE,UAACD,EAAD,YACE,SAAC,KAAD,CACEE,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IATb,MAcH,C,8FCjBYC,EAAYX,EAAAA,GAAAA,GAAH,+CAITY,EAAcZ,EAAAA,GAAAA,GAAH,wEAMXa,EAAYb,EAAAA,GAAAA,EAAH,kF,mBCPTc,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAKG,KAAI,SAAAC,GAAI,OACZ,SAACP,EAAD,WACE,SAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SACGG,EAAKK,OACJ,SAACX,EAAD,UAAYM,EAAKK,SAEjB,SAACX,EAAD,UAAYM,EAAKM,UALLN,EAAKE,GADX,KAanB,C,oICkBD,UAlCa,WACX,OAAkCK,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAagB,EAAb,KAqBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACb,IAAMK,EAAS,mCAAG,gHAEYC,EAAAA,EAAAA,GAPf,mBACG,IAIA,gBAENC,EAFM,EAENA,QACRJ,EAAQI,GAHM,gDAKdC,QAAQC,IAAI,KAAIC,SAChBR,EAAS,yDANK,yBAQdF,GAAa,GARC,4EAAH,qDAWfK,GACD,GAAE,KAGD,6BACE,2CACCN,IAAa,SAAC,IAAD,IACbE,IAAS,SAAC,IAAD,UAAQA,IACjBd,IAAQ,SAAC,IAAD,CAAYA,KAAMA,MAGhC,C,kGCjCYmB,EAAW,mCAAG,WAAOK,EAAUC,GAAjB,gFACnBC,EADmB,UAHV,iCAGU,OACCF,EADD,oBAFX,mCAEW,kBACsCC,EADtC,gCAEFE,EAAAA,EAAAA,IAAUD,GAFR,cAEnBE,EAFmB,OAGzBP,QAAQC,IAAI,WAAYM,GAHC,kBAIlBA,EAAS5B,MAJS,2CAAH,uD","sources":["components/Error.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MoviesList.styled.js","components/MovieList/MoviesList.jsx","pages/Home.jsx","services/pics-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Error = styled.h4`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  padding: 10px 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/Loader/Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      ;\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  padding-left: 20px;\n`;\n\nexport const CardWrapper = styled.li`\n  > a {\n    /* text-decoration: none; */\n  }\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {data.map(item => (\n        <CardWrapper key={item.id}>\n          <Link to={`/movies/${item.id}`} state={{ from: location }}>\n            {item.title ? (\n              <MovieName>{item.title}</MovieName>\n            ) : (\n              <MovieName>{item.name}</MovieName>\n            )}\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.array,\n};\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from '../components/MovieList/MoviesList';\nimport { fetchMovies } from 'services/pics-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error.styled';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n\n  const CATEGORY = 'trending/all/day';\n  const searchQuery = '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const { results } = await fetchMovies(CATEGORY, searchQuery);\n        setData(results);\n      } catch (err) {\n        console.log(err.message);\n        setError('Sorry, the resource you requested could not be found.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Tranding today</h1>\n      {isLoading && <Loader />}\n      {error && <Error>{error}</Error>}\n      {data && <MoviesList data={data} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a5df1998c5a11e97d4f18de655b25c8d';\n\nexport const fetchMovies = async (category, searchQuery) => {\n  const url = `${BASE_URL}${category}?api_key=${API_KEY}&query=${searchQuery}&language=en&page=1`;\n  const response = await axios.get(url);\n  console.log('response', response);\n  return response.data;\n};\n"],"names":["Error","styled","LoaderWrapper","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Container","CardWrapper","MovieName","MoviesList","data","location","useLocation","map","item","to","id","state","from","title","name","useState","isLoading","setIsLoading","error","setError","setData","useEffect","getMovies","fetchMovies","results","console","log","message","category","searchQuery","url","axios","response"],"sourceRoot":""}