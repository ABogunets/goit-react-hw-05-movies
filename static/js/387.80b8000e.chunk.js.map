{"version":3,"file":"static/js/387.80b8000e.chunk.js","mappings":"0SAGaA,EAAQC,EAAAA,GAAAA,IAAH,qFAMLC,EAAOD,EAAAA,GAAAA,GAAH,mE,IAIOA,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,oJ,4BC+CrB,EApDa,WACX,OAAkCG,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,YAAxB,eAAOK,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAQ,gBAAYF,EAAZ,YAoBd,OAjBAG,EAAAA,EAAAA,YAAU,WACRR,GAAa,GAEb,IAAMS,EAAS,mCAAG,gHAESC,EAAAA,EAAAA,GAAYH,EAPrB,IAKA,gBAENI,EAFM,EAENA,KACRP,EAAQO,GAHM,gDAKdC,QAAQC,IAAI,KAAIC,SAChBZ,EAAS,yDANK,yBAQdF,GAAa,GARC,4EAAH,qDAWfS,GACD,GAAE,CAACF,KAGF,2BACGR,IAAa,SAACgB,EAAA,EAAD,IACbd,IAAS,SAAC,IAAD,UAAQA,IACjBE,IACC,SAACP,EAAD,UACGO,EAAKa,KAAI,SAAAC,GAAI,OACZ,2BACE,SAACvB,EAAD,CACEwB,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cACxCC,EAENC,IAAKJ,EAAKK,QAEZ,yBAAIL,EAAKK,KAAT,QACA,4CAAkBL,EAAKM,eAVhBN,EAAKZ,GADF,QAkBvB,C,sECxDYmB,E,QAAQ7B,GAAAA,GAAH,8H,gFCAL8B,E,QAAgB9B,GAAAA,IAAH,yF,SCCboB,EAAS,WACpB,OACE,UAACU,EAAD,YACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IATb,MAcH,C,kGCdYvB,EAAW,mCAAG,WAAOwB,EAAUC,GAAjB,gFACnBC,EADmB,UAHV,iCAGU,OACCF,EADD,oBAFX,mCAEW,kBACsCC,EADtC,gCAEFE,EAAAA,EAAAA,IAAUD,GAFR,cAEnBE,EAFmB,OAGzB1B,QAAQC,IAAI,WAAYyB,GAHC,kBAIlBA,EAASnC,MAJS,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","services/pics-api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  width: 100px;\n  margin-top: 20px;\n  margin-bottom: 5px;\n`;\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  font-size: 14px;\n`;\nexport const LinkBack = styled(NavLink)`\n  padding: 5px 8px;\n  border-radius: 4px;\n  background-color: WhiteSmoke;\n  text-decoration: none;\n  color: orangered;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovies } from 'services/pics-api';\nimport { Loader } from 'components/Loader/Loader';\nimport { List, Image } from './Cast.styled';\nimport noImage from 'images/noImage.png';\nimport { Error } from 'components/Error.styled';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState();\n  const { id } = useParams();\n\n  const CATEGORY = `movie/${id}/credits`;\n  const searchQuery = '';\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getMovies = async () => {\n      try {\n        const { cast } = await fetchMovies(CATEGORY, searchQuery);\n        setData(cast);\n      } catch (err) {\n        console.log(err.message);\n        setError('Sorry, the resource you requested could not be found.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [CATEGORY]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <Error>{error}</Error>}\n      {data && (\n        <List>\n          {data.map(item => (\n            <li key={item.id}>\n              <Image\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                    : noImage\n                }\n                alt={item.name}\n              />\n              <p>{item.name} </p>\n              <p>{`Character: ${item.character}`}</p>\n            </li>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Error = styled.h4`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  padding: 10px 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/Loader/Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      ;\n    </LoaderWrapper>\n  );\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a5df1998c5a11e97d4f18de655b25c8d';\n\nexport const fetchMovies = async (category, searchQuery) => {\n  const url = `${BASE_URL}${category}?api_key=${API_KEY}&query=${searchQuery}&language=en&page=1`;\n  const response = await axios.get(url);\n  console.log('response', response);\n  return response.data;\n};\n"],"names":["Image","styled","List","NavLink","useState","isLoading","setIsLoading","error","setError","data","setData","id","useParams","CATEGORY","useEffect","getMovies","fetchMovies","cast","console","log","message","Loader","map","item","src","profile_path","noImage","alt","name","character","Error","LoaderWrapper","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","category","searchQuery","url","axios","response"],"sourceRoot":""}