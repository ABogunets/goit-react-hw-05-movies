{"version":3,"file":"static/js/281.7a2a3cbd.chunk.js","mappings":"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","sources":["components/Error.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/MovieList/MoviesList.styled.js","components/MovieList/MoviesList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/pics-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Error = styled.h4`\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n`;\n","import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  padding: 10px 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderWrapper } from 'components/Loader/Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <ThreeDots\n        height=\"50\"\n        width=\"50\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n      ;\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  padding-left: 20px;\n`;\n\nexport const CardWrapper = styled.li`\n  > a {\n    /* text-decoration: none; */\n  }\n`;\n\nexport const MovieName = styled.p`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Container, CardWrapper, MovieName } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ data }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {data.map(item => (\n        <CardWrapper key={item.id}>\n          <Link to={`/movies/${item.id}`} state={{ from: location }}>\n            {item.title ? (\n              <MovieName>{item.title}</MovieName>\n            ) : (\n              <MovieName>{item.name}</MovieName>\n            )}\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const SearchbarWrapper = styled.header``;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 400px;\n`;\n\nexport const SearchBtn = styled.button`\n  padding: 2px 5px;\n  font: inherit;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  z-index: 100;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  padding: 2px 4px;\n\n  &:focus {\n    border: none;\n    outline: 3px solid SkyBlue;\n  }\n`;\n","// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport {\n  SearchbarWrapper,\n  SearchForm,\n  SearchBtn,\n  Input,\n} from 'components/Searchbar/Searchbar.styled';\n\nexport const Searchbar = ({ setSearchParams }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const queryValue = e.target.elements.inputQuery.value;\n    setSearchParams({ query: queryValue });\n    if (queryValue.trim() === '') {\n      toast.warning('Please enter something..');\n      return;\n    }\n    e.target.elements.inputQuery.value = '';\n  };\n\n  return (\n    <SearchbarWrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"inputQuery\" autocomplete=\"off\" autoFocus />\n        <SearchBtn type=\"submit\">Search</SearchBtn>\n      </SearchForm>\n    </SearchbarWrapper>\n  );\n};\n\nSearchbar.propTypes = {\n  setSearchParams: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchMovies } from 'services/pics-api';\nimport { MoviesList } from '../components/MovieList/MoviesList';\nimport { Error } from 'components/Error.styled';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n\n  const CATEGORY = 'search/movie';\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      //first render, fetch is not performed\n      return;\n    }\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const { results } = await fetchMovies(CATEGORY, searchQuery);\n        setData(results);\n        if (results.length === 0) {\n          toast.info(`Sorry, no results on query \"${searchQuery}\"`);\n        }\n      } catch (err) {\n        console.log(err.message);\n        setError('Sorry, the resource you requested could not be found.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [searchQuery]);\n\n  return (\n    <main>\n      <Searchbar setSearchParams={setSearchParams} />\n      {isLoading && <Loader />}\n      {error && <Error>{error}</Error>}\n      {data && <MoviesList data={data} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a5df1998c5a11e97d4f18de655b25c8d';\n\nexport const fetchMovies = async (category, searchQuery) => {\n  const url = `${BASE_URL}${category}?api_key=${API_KEY}&query=${searchQuery}&language=en&page=1`;\n  const response = await axios.get(url);\n  return response.data;\n};\n"],"names":["Error","styled","LoaderWrapper","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Container","CardWrapper","MovieName","MoviesList","data","location","useLocation","map","item","to","id","state","from","title","name","SearchbarWrapper","SearchForm","SearchBtn","Input","Searchbar","setSearchParams","onSubmit","e","preventDefault","queryValue","target","elements","inputQuery","value","query","trim","toast","type","autocomplete","autoFocus","useState","isLoading","setIsLoading","error","setError","setData","useSearchParams","searchParams","searchQuery","get","useEffect","getMovies","fetchMovies","results","length","console","log","message","category","url","axios","response"],"sourceRoot":""}